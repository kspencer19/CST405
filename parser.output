State 0 conflicts: 6 shift/reduce
State 9 conflicts: 6 shift/reduce, 1 reduce/reduce
State 11 conflicts: 1 shift/reduce
State 15 conflicts: 5 shift/reduce
State 37 conflicts: 1 reduce/reduce
State 38 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDeclList
    6     | StmtList
    7     | Array

    8 VarDeclList: %empty
    9            | VarDecl VarDeclList

   10 VarDecl: TYPE ID SEMICOLON

   11 Array: TYPE ID OBRACK NUMBER CBRACK SEMICOLON

   12 $@1: %empty

   13 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN Block

   14 ParamDecList: %empty
   15             | ParamDecListTail

   16 ParamDecListTail: ParamDecl
   17                 | ParamDecl COMMA ParamDecListTail

   18 ParamDecl: TYPE ID

   19 Block: OCBRACE VarDeclList StmtList CCBRACE

   20 StmtList: Stmt
   21         | Stmt StmtList

   22 Stmt: Expr SEMICOLON

   23 Expr: Math
   24     | ID EQ ID
   25     | ID EQ NUMBER
   26     | ID EQ ID OPAREN CallList CPAREN
   27     | ID EQ Math
   28     | WRITE ID
   29     | RETURN ID

   30 CallList: %empty
   31         | Math
   32         | Math COMMA CallList

   33 Math: Math PLUS Math
   34     | Math MINUS Math
   35     | Math MULTIPLY Math
   36     | Math DIVIDE Math
   37     | OPAREN Math CPAREN
   38     | ID
   39     | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPE <string> (258) 10 11 13 18
    ID <string> (259) 10 11 13 18 24 25 26 27 28 29 38
    SEMICOLON <char> (260) 10 11 22
    COMMA <char> (261) 17 32
    EQ <char> (262) 24 25 26 27
    OPAREN <char> (263) 13 26 37
    CPAREN <char> (264) 13 26 37
    OBRACK <char> (265) 11
    CBRACK <char> (266) 11
    OCBRACE <char> (267) 19
    CCBRACE <char> (268) 19
    PLUS <char> (269) 33
    MINUS <char> (270) 34
    MULTIPLY <char> (271) 35
    DIVIDE <char> (272) 36
    NUMBER <number> (273) 11 25 39
    WRITE (274) 28
    RETURN (275) 29


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    Program <ast> (22)
        on left: 1
        on right: 0
    DeclList <ast> (23)
        on left: 2 3
        on right: 1 2
    Decl <ast> (24)
        on left: 4 5 6 7
        on right: 2 3
    VarDeclList <ast> (25)
        on left: 8 9
        on right: 5 9 19
    VarDecl <ast> (26)
        on left: 10
        on right: 9
    Array <ast> (27)
        on left: 11
        on right: 7
    FunDecl <ast> (28)
        on left: 13
        on right: 4
    $@1 (29)
        on left: 12
        on right: 13
    ParamDecList <ast> (30)
        on left: 14 15
        on right: 13
    ParamDecListTail <ast> (31)
        on left: 16 17
        on right: 15 17
    ParamDecl <ast> (32)
        on left: 18
        on right: 16 17
    Block <ast> (33)
        on left: 19
        on right: 13
    StmtList <ast> (34)
        on left: 20 21
        on right: 6 19 21
    Stmt <ast> (35)
        on left: 22
        on right: 20 21
    Expr <ast> (36)
        on left: 23 24 25 26 27 28 29
        on right: 22
    CallList <ast> (37)
        on left: 30 31 32
        on right: 26 32
    Math <ast> (38)
        on left: 33 34 35 36 37 38 39
        on right: 23 27 31 32 33 34 35 36 37


State 0

    0 $accept: . Program $end

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4
    WRITE   shift, and go to state 5
    RETURN  shift, and go to state 6

    TYPE      [reduce using rule 8 (VarDeclList)]
    ID        [reduce using rule 8 (VarDeclList)]
    OPAREN    [reduce using rule 8 (VarDeclList)]
    NUMBER    [reduce using rule 8 (VarDeclList)]
    WRITE     [reduce using rule 8 (VarDeclList)]
    RETURN    [reduce using rule 8 (VarDeclList)]
    $default  reduce using rule 8 (VarDeclList)

    Program      go to state 7
    DeclList     go to state 8
    Decl         go to state 9
    VarDeclList  go to state 10
    VarDecl      go to state 11
    Array        go to state 12
    FunDecl      go to state 13
    StmtList     go to state 14
    Stmt         go to state 15
    Expr         go to state 16
    Math         go to state 17


State 1

   10 VarDecl: TYPE . ID SEMICOLON
   11 Array: TYPE . ID OBRACK NUMBER CBRACK SEMICOLON
   13 FunDecl: TYPE . ID OPAREN $@1 ParamDecList CPAREN Block

    ID  shift, and go to state 18


State 2

   24 Expr: ID . EQ ID
   25     | ID . EQ NUMBER
   26     | ID . EQ ID OPAREN CallList CPAREN
   27     | ID . EQ Math
   38 Math: ID .

    EQ  shift, and go to state 19

    $default  reduce using rule 38 (Math)


State 3

   37 Math: OPAREN . Math CPAREN

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    Math  go to state 21


State 4

   39 Math: NUMBER .

    $default  reduce using rule 39 (Math)


State 5

   28 Expr: WRITE . ID

    ID  shift, and go to state 22


State 6

   29 Expr: RETURN . ID

    ID  shift, and go to state 23


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 24


State 8

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


State 9

    2 DeclList: Decl . DeclList
    3         | Decl .

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4
    WRITE   shift, and go to state 5
    RETURN  shift, and go to state 6

    $end      reduce using rule 3 (DeclList)
    $end      [reduce using rule 8 (VarDeclList)]
    TYPE      [reduce using rule 8 (VarDeclList)]
    ID        [reduce using rule 8 (VarDeclList)]
    OPAREN    [reduce using rule 8 (VarDeclList)]
    NUMBER    [reduce using rule 8 (VarDeclList)]
    WRITE     [reduce using rule 8 (VarDeclList)]
    RETURN    [reduce using rule 8 (VarDeclList)]
    $default  reduce using rule 3 (DeclList)

    DeclList     go to state 25
    Decl         go to state 9
    VarDeclList  go to state 10
    VarDecl      go to state 11
    Array        go to state 12
    FunDecl      go to state 13
    StmtList     go to state 14
    Stmt         go to state 15
    Expr         go to state 16
    Math         go to state 17


State 10

    5 Decl: VarDeclList .

    $default  reduce using rule 5 (Decl)


State 11

    9 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 26

    TYPE      [reduce using rule 8 (VarDeclList)]
    $default  reduce using rule 8 (VarDeclList)

    VarDeclList  go to state 27
    VarDecl      go to state 11


State 12

    7 Decl: Array .

    $default  reduce using rule 7 (Decl)


State 13

    4 Decl: FunDecl .

    $default  reduce using rule 4 (Decl)


State 14

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


State 15

   20 StmtList: Stmt .
   21         | Stmt . StmtList

    ID      shift, and go to state 2
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4
    WRITE   shift, and go to state 5
    RETURN  shift, and go to state 6

    ID        [reduce using rule 20 (StmtList)]
    OPAREN    [reduce using rule 20 (StmtList)]
    NUMBER    [reduce using rule 20 (StmtList)]
    WRITE     [reduce using rule 20 (StmtList)]
    RETURN    [reduce using rule 20 (StmtList)]
    $default  reduce using rule 20 (StmtList)

    StmtList  go to state 28
    Stmt      go to state 15
    Expr      go to state 16
    Math      go to state 17


State 16

   22 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 29


State 17

   23 Expr: Math .
   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 23 (Expr)


State 18

   10 VarDecl: TYPE ID . SEMICOLON
   11 Array: TYPE ID . OBRACK NUMBER CBRACK SEMICOLON
   13 FunDecl: TYPE ID . OPAREN $@1 ParamDecList CPAREN Block

    SEMICOLON  shift, and go to state 34
    OPAREN     shift, and go to state 35
    OBRACK     shift, and go to state 36


State 19

   24 Expr: ID EQ . ID
   25     | ID EQ . NUMBER
   26     | ID EQ . ID OPAREN CallList CPAREN
   27     | ID EQ . Math

    ID      shift, and go to state 37
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 38

    Math  go to state 39


State 20

   38 Math: ID .

    $default  reduce using rule 38 (Math)


State 21

   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math
   37     | OPAREN Math . CPAREN

    CPAREN    shift, and go to state 40
    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33


State 22

   28 Expr: WRITE ID .

    $default  reduce using rule 28 (Expr)


State 23

   29 Expr: RETURN ID .

    $default  reduce using rule 29 (Expr)


State 24

    0 $accept: Program $end .

    $default  accept


State 25

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


State 26

   10 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 41


State 27

    9 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 9 (VarDeclList)


State 28

   21 StmtList: Stmt StmtList .

    $default  reduce using rule 21 (StmtList)


State 29

   22 Stmt: Expr SEMICOLON .

    $default  reduce using rule 22 (Stmt)


State 30

   33 Math: Math PLUS . Math

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    Math  go to state 42


State 31

   34 Math: Math MINUS . Math

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    Math  go to state 43


State 32

   35 Math: Math MULTIPLY . Math

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    Math  go to state 44


State 33

   36 Math: Math DIVIDE . Math

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    Math  go to state 45


State 34

   10 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 10 (VarDecl)


State 35

   13 FunDecl: TYPE ID OPAREN . $@1 ParamDecList CPAREN Block

    $default  reduce using rule 12 ($@1)

    $@1  go to state 46


State 36

   11 Array: TYPE ID OBRACK . NUMBER CBRACK SEMICOLON

    NUMBER  shift, and go to state 47


State 37

   24 Expr: ID EQ ID .
   26     | ID EQ ID . OPAREN CallList CPAREN
   38 Math: ID .

    OPAREN  shift, and go to state 48

    SEMICOLON  reduce using rule 24 (Expr)
    SEMICOLON  [reduce using rule 38 (Math)]
    $default   reduce using rule 38 (Math)


State 38

   25 Expr: ID EQ NUMBER .
   39 Math: NUMBER .

    SEMICOLON  reduce using rule 25 (Expr)
    SEMICOLON  [reduce using rule 39 (Math)]
    $default   reduce using rule 39 (Math)


State 39

   27 Expr: ID EQ Math .
   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math

    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 27 (Expr)


State 40

   37 Math: OPAREN Math CPAREN .

    $default  reduce using rule 37 (Math)


State 41

   10 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 42

   33 Math: Math . PLUS Math
   33     | Math PLUS Math .
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math

    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 33 (Math)


State 43

   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   34     | Math MINUS Math .
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math

    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 34 (Math)


State 44

   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   35     | Math MULTIPLY Math .
   36     | Math . DIVIDE Math

    $default  reduce using rule 35 (Math)


State 45

   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math
   36     | Math DIVIDE Math .

    $default  reduce using rule 36 (Math)


State 46

   13 FunDecl: TYPE ID OPAREN $@1 . ParamDecList CPAREN Block

    TYPE  shift, and go to state 49

    $default  reduce using rule 14 (ParamDecList)

    ParamDecList      go to state 50
    ParamDecListTail  go to state 51
    ParamDecl         go to state 52


State 47

   11 Array: TYPE ID OBRACK NUMBER . CBRACK SEMICOLON

    CBRACK  shift, and go to state 53


State 48

   26 Expr: ID EQ ID OPAREN . CallList CPAREN

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    $default  reduce using rule 30 (CallList)

    CallList  go to state 54
    Math      go to state 55


State 49

   18 ParamDecl: TYPE . ID

    ID  shift, and go to state 56


State 50

   13 FunDecl: TYPE ID OPAREN $@1 ParamDecList . CPAREN Block

    CPAREN  shift, and go to state 57


State 51

   15 ParamDecList: ParamDecListTail .

    $default  reduce using rule 15 (ParamDecList)


State 52

   16 ParamDecListTail: ParamDecl .
   17                 | ParamDecl . COMMA ParamDecListTail

    COMMA  shift, and go to state 58

    $default  reduce using rule 16 (ParamDecListTail)


State 53

   11 Array: TYPE ID OBRACK NUMBER CBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 54

   26 Expr: ID EQ ID OPAREN CallList . CPAREN

    CPAREN  shift, and go to state 60


State 55

   31 CallList: Math .
   32         | Math . COMMA CallList
   33 Math: Math . PLUS Math
   34     | Math . MINUS Math
   35     | Math . MULTIPLY Math
   36     | Math . DIVIDE Math

    COMMA     shift, and go to state 61
    PLUS      shift, and go to state 30
    MINUS     shift, and go to state 31
    MULTIPLY  shift, and go to state 32
    DIVIDE    shift, and go to state 33

    $default  reduce using rule 31 (CallList)


State 56

   18 ParamDecl: TYPE ID .

    $default  reduce using rule 18 (ParamDecl)


State 57

   13 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN . Block

    OCBRACE  shift, and go to state 62

    Block  go to state 63


State 58

   17 ParamDecListTail: ParamDecl COMMA . ParamDecListTail

    TYPE  shift, and go to state 49

    ParamDecListTail  go to state 64
    ParamDecl         go to state 52


State 59

   11 Array: TYPE ID OBRACK NUMBER CBRACK SEMICOLON .

    $default  reduce using rule 11 (Array)


State 60

   26 Expr: ID EQ ID OPAREN CallList CPAREN .

    $default  reduce using rule 26 (Expr)


State 61

   32 CallList: Math COMMA . CallList

    ID      shift, and go to state 20
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    $default  reduce using rule 30 (CallList)

    CallList  go to state 65
    Math      go to state 55


State 62

   19 Block: OCBRACE . VarDeclList StmtList CCBRACE

    TYPE  shift, and go to state 26

    $default  reduce using rule 8 (VarDeclList)

    VarDeclList  go to state 66
    VarDecl      go to state 11


State 63

   13 FunDecl: TYPE ID OPAREN $@1 ParamDecList CPAREN Block .

    $default  reduce using rule 13 (FunDecl)


State 64

   17 ParamDecListTail: ParamDecl COMMA ParamDecListTail .

    $default  reduce using rule 17 (ParamDecListTail)


State 65

   32 CallList: Math COMMA CallList .

    $default  reduce using rule 32 (CallList)


State 66

   19 Block: OCBRACE VarDeclList . StmtList CCBRACE

    ID      shift, and go to state 2
    OPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4
    WRITE   shift, and go to state 5
    RETURN  shift, and go to state 6

    StmtList  go to state 67
    Stmt      go to state 15
    Expr      go to state 16
    Math      go to state 17


State 67

   19 Block: OCBRACE VarDeclList StmtList . CCBRACE

    CCBRACE  shift, and go to state 68


State 68

   19 Block: OCBRACE VarDeclList StmtList CCBRACE .

    $default  reduce using rule 19 (Block)
